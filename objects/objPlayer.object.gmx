<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBird</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0; //wont be using this
image_spd = .25;
image_ind = 0; //our special way of drawing (to get the bird to flap wings up middle down middle etc

jumpCooldown = -1; //regulate how often player can jump
coolCount = 2; //Minimum of frames to wait between taps

yVel = 0;
yAccel = .35*SCALE; //Gravity
yMax = objControl.groundy-8*SCALE;//room_height-background_get_height(background1)*SCALE;

tapThrust = 6*SCALE; //Acceleration in pixels per frame to give player every tap

device_mouse_dbclick_enable(false); //YYG please get rid of this, on the small chance that I want double tap I'm fine implementing it myself

image_xscale = SCALE;
image_yscale = SCALE;


xx = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stuff 
if global.worldSpeed&gt;0{
    image_ind = (image_ind+image_spd*global.d) mod 4;
    if (floor(image_ind) == 3){
        image_index = 1;
    } else {
        image_index = floor(image_ind);
    }
    
    //update jump cooldown timer
    if (jumpCooldown &gt; 0){
        jumpCooldown = max(0,jumpCooldown-1*global.d);
    }
    if (jumpCooldown == 0){
        //switch timer off
        jumpCooldown = -1;
    }
    
    if (y&gt;0 &amp;&amp; jumpCooldown == -1)
    for (var i=0; i&lt;MAX_TOUCHPOINTS; i++){
        //if device_mouse_check_button_pressed(i,mb_left){
        if keyboard_check_pressed(vk_anykey) {
            if global.Price = 0 || global.Credits &gt; 0 {
                yVel = -tapThrust;
                jumpCooldown = coolCount;
                audio_play_sound(sfx_wing,0,0);
                
            }
        }
    }
} else { //else game over
image_index = 1;
}    
//Update movement
if objControl.tut{
    y = ystart + sin (xx)*5
    xx = (xx+.2*global.d) mod (2*pi);
} else {
    yVel += yAccel;
    y = min(yMax,y+yVel*global.d);
}
if (y==yMax &amp;&amp; global.worldSpeed&lt;&gt;0) {  
    global.worldSpeed = 0; 
    audio_play_sound(sfx_groundend,0,0)
    /*MOJO*/ 
    global.Credits -= 1;
    }


if (yVel&lt;0)
image_angle = clamp(image_angle-(yVel)*global.d*4,-90,35); //-90 and 40 are the max angles
else 
if (global.worldSpeed &lt;&gt; 0) image_angle = clamp(image_angle-(yVel)*global.d*.5,-90,35); //-90 and 40 are the max angles
else image_angle = clamp(image_angle-(yVel)*global.d*2,-90,35); //-90 and 40 are the max angles

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,6</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
